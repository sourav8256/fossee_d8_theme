<?php

/**
 * @file
 * Contains theme override functions and preprocess functions
 */

use Drupal\Core\Template\RenderWrapper;
use Drupal\Core\Template\Attribute;
use Drupal\search\Form\SearchBlockForm;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Core\Form\FormStateInterface;
use Drupal\system\Form\ThemeSettingsForm;
use Drupal\file\Entity\File;
use Drupal\Core\Url;
use Drupal\file\Plugin\Core\Entity\FileInterface;
use Drupal\Core\Form;

/**
 * Implements hook_preprocess_page() for block templates.
 */

function fossee_d8_theme_preprocess_page(&$variables) {

  //$parameters = \Drupal::routeMatch()->getParameters();
  $parameters = \Drupal::service('path.current')->getPath();
  $parameters = explode("/",$parameters);

  $current_path = \Drupal::service('path.current')->getPath();
  
  $current_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);
  $variables['current_path'] = $current_alias;
  $current_uri = \Drupal::request()->getRequestUri();

  // if($current_path == '/resources'){
  //   $variables['title'] = array('#type'=>'inline_template','#template'=>theme_get_setting('resources_title'));
  //   $variables['content'] = array('#type'=>'inline_template','#template'=>theme_get_setting('resources_content'));
  //   $variables['resources_status'] = 'active';
  // } elseif($current_path == '/fellowship'){
  //   $variables['title'] = array('#type'=>'inline_template','#template'=>theme_get_setting('fellowship_title'));
  //   $variables['content'] = array('#type'=>'inline_template','#template'=>theme_get_setting('fellowship_content'));
  //   $variables['fellowship_status'] = 'active';
  // } elseif($current_path == '/contact'){
  //   $variables['title'] = array('#type'=>'inline_template','#template'=>theme_get_setting('contact_title'));
  //   $variables['content'] = array('#type'=>'inline_template','#template'=>theme_get_setting('contact_content'));
  //   $variables['contact_status'] = 'active';
  // } elseif($current_path == '/home'){
  //   $variables['title'] = array('#type'=>'inline_template','#template'=>theme_get_setting('front_title'));
  //   $variables['content'] = array('#type'=>'inline_template','#template'=>theme_get_setting('front_content'));
  //   $variables['home_status'] = 'active';
  // } else {
  //   $variables['title'] = array('#type'=>'inline_template','#template'=>theme_get_setting('front_title'));
  //   $variables['content'] = array('#type'=>'inline_template','#template'=>theme_get_setting('front_content'));
  //   $variables['home_status'] = 'active';
  // } 

  $connection = \Drupal::database();
  // Get the no of total colleges
  $query = $connection->query('SELECT title,link__uri FROM menu_link_content_data WHERE parent is NULL ORDER by weight asc');
  $variables['main_menu'] = $query->fetchAll();


  /**
   * fetch images from fossee_slider_images folder and sets the array to a variable
   */


  $slider_images_dir = "public://fossee_slider_images";
  $variables['slider_image_dir'] = file_create_url($slider_images_dir)."/"; 
  $variables['slider_images'] = file_scan_directory($slider_images_dir,"//");

  if (1==1) {
    $request = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
    
    if (!empty($page_title)) {
      $variables['breadcrumb'][] = [
        'text' => $page_title,
        'url' => $current_uri,
        'attributes' => new Attribute(['class' => ['active']])
      ];
    }
  }

}

/**
 * Implements hook_preprocess_menu().
 */
function fossee_d8_theme_preprocess_menu(&$variables, $hook) {

 

}


function fossee_d8_theme_preprocess_breadcrumb(&$variables) {
  $variables['breadcrumb'] = "h";
  if ($variables['breadcrumb']) {
    $request = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
    
    if (!empty($page_title)) {
      $variables['breadcrumb'][] = [
        'text' => $page_title,
        'attributes' => new Attribute(['class' => ['active']])
      ];
    }
  }

}


/**
 * Implements hook_form_system_theme_settings_alter().
 */
function fossee_d8_theme_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {


  createSliderImageForm($form,$form_state);

  $slider_images_dir = "public://fossee_slider_images";
  
  if (!is_dir($slider_images_dir)) {
    if (drupal_mkdir($slider_images_dir, NULL, TRUE, NULL)) {
    } else {
        drupal_set_message(t("Failure : could not create directory"), "error");
    }
  } else {
  }
 
  $form['image'] = array(
    '#type'          => 'managed_file',
    '#title'         => t('Slider Image'),
    '#upload_location' => $slider_images_dir,
    '#default_value' => '',
    '#description'   => t('Please browse the slider image and "Save configuration".'),
    '#states'        => array(
      'visible'      => array(
        ':input[name="image_type"]' => array('value' => t('Upload New Image(s)')),
      ),
    ),
  );


  // $form['image'] = array(
  //   '#type' => 'file',
  //   '#title' => 'Upload File',
  //   '#description' => "Allowed file types: [".\Drupal::state()->get('fossee_site_banner_allowed_file_types', "Not Set")."] and Max. file size: ".\Drupal::state()->get('fossee_site_banner_max_file_size', "Not Set")/(1024*1024)." MBs",
  // );


  //$form['#submit'][] = "alter_submit_hook";
  //$form['#submit'][] = "delete_slider_image";

}


function createSliderImageForm(&$form, \Drupal\Core\Form\FormStateInterface $form_state){
  $slider_images_dir = "public://fossee_slider_images";
  $slider_image_url = file_create_url($slider_images_dir)."/"; 
  $slider_images = file_scan_directory($slider_images_dir,"//");

  $form['slider_images'] = array(
    '#type' => 'details',
    '#title' => t('Slider Images'),
    //'#collapsible' => TRUE,
    //'#collapsed' => FALSE,
    '#open' => TRUE,
    '#prefix' => '<div id="ajax_wrapper">',
    '#suffix' => '</div>'
  );

  $i = 0;

  foreach($slider_images as $slider_image){

    $form['slider_images']["slider_form_".$i]['image_path'] = array(
      '#type' => 'hidden',
      '#markup' => $slider_images_dir.'/'.$slider_image->filename,
    );

    $form['slider_images']["slider_form_".$i]['image'] = array(
      '#type' => 'inline_template',
      '#template' => "<div style='margin : 20px;'><img style='height:100px; width:250px;' src='".$slider_image_url.$slider_image->filename."' >",
    );

    $form['slider_images']["slider_form_".$i]['checkbox'.$i] = array(
      '#type' =>'checkbox', 
      '#title' => t('Select to delete'),
      '#default_value' => $form_state->getValue('checkbox'.$i),
      '#suffix' => '</div><br>',
      // '#ajax'   => array(
      //   'callback'=> 'delete_slider_image',
      //   'wrapper' => 'ajax_wrapper',
      //   'effect'  => 'fade',
      // ),
    );

    //$form['slider_images']["slider_form_".$i]['#submit'] = "delete_slider_image";

    $i++;

  }

  $form['slider_images2']['checkbox_submit'] = array(
    '#type' =>'submit', 
    '#value' => t('Delete Selected'),
    //'#field_suffix' => '<img src="myimg.png" />',
    '#name' => 'delete_selected',
    '#suffix' => '</div><br>',
    '#submit' => array('delete_slider_image'),
      '#ajax'   => array(
        'callback'=> 'delete_slider_image_callback',
        'wrapper' => 'ajax_wrapper',
        'effect'  => 'fade',
    ),
  );

  $form_state->set('slider_images_count',$i);

  
}


function alter_submit_hook(&$form, \Drupal\Core\Form\FormStateInterface $form_state){

  // $allowed_extensions = \Drupal::state()->get('fossee_site_banner_allowed_file_types', "Not Set");
  // //$allowed_extensions = str_replace(","," ",$allowed_extensions);

  // $validators = array(
  //     'file_validate_size' => array(\Drupal::state()->get('fossee_site_banner_max_file_size', "Not Set")), // size restriction for banner image size
  //     'file_validate_extensions' => array($allowed_extensions) // allowed extensions of banner image
  // );

  // custom_upload_file('image',$validators,'public://fossee_slider_images');

  $image = $form_state->getValue('image');
  $file_usage = \Drupal::service('file.usage');
  if($image){
    $file = File::load( $image[0] );
    $file->setPermanent();
    $file->save();
    $file_usage->add($file, 'fossee_d8_theme', 'fossee_d8_theme', \Drupal::currentUser()->id());
  }

}


function custom_upload_file($fieldname,$validators,$path){

  //this is an array of errors if found
  $errors = array();


  // for checking if the file extension is allowed
  $file_name = $_FILES['files']['name'][$fieldname];
  //get file extension
  $file_extension = explode(".",$file_name)[1];
  
  //array of allowed file extensions
  $allowed_extensions = explode(",",$validators['file_validate_extensions'][0]);

  //checking if the file_extension is present in the array of allowed_extensions
  if(!in_array($file_extension,$allowed_extensions)){
    $errors[] = "Invalid file type. Allowed file types are ".$validators['file_validate_extensions'][0];
  }
  // checking for allowed file type completes


  //for checking file size

  $max_allowed_filesize = $validators['file_validate_size'][0];
  //size of the uploading file
  $file_size = $_FILES['files']['size'][$fieldname];

  if($file_size>$max_allowed_filesize){
    $errors[] = "Filesize exceeded maximum allowed filesize ".($max_allowed_filesize/(1024*1024))." MBs";
  }

  //checking file size completes

  //saving file given location
  $realpath_of_destination = drupal_realpath($path);




  //file is saved to the temporary location with the real filename
  if(move_uploaded_file($_FILES['files']['tmp_name'][$fieldname], $realpath_of_destination.'/'.$file_name)){
  //file is saved to the temporary location
  //we need to return the filename for further use
  $file->filename = $file_name;

  } else {
    //when move_upload_file fails for some reason
    $errors[] = "Uploaded file could not be moved";
  }
  


  //we need to print all the errors so user can understand what went wrong

  foreach($errors as $error){
    drupal_set_message($error,"error");
  }



  // Now we need to check if there were any errors
  // and return false if there is any error
  // and we can return the file if there is no error
 
  if(sizeof($errors)!=0){
    return false;
  } else {
    return $file;
  }


}




function delete_slider_image(&$form, \Drupal\Core\Form\FormStateInterface $form_state){


  $slider_images_count = $form_state->get('slider_images_count');

  for($i=0;$i<$slider_images_count;$i++){


    if($form_state->getValue('checkbox'.$i)){
      if(file_unmanaged_delete($form['slider_images']["slider_form_".$i]['image_path']['#markup'])){ 
        dpm('Deleted '.$form['slider_images']["slider_form_".$i]['image_path']['#markup']);
      }

    }

    $form_state->setValue('checkbox'.$i,0);

  }



  $form_state->setRebuild();

}



function delete_slider_image_callback(&$form, \Drupal\Core\Form\FormStateInterface $form_state){

  return $form['slider_images'];
}